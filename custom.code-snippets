{
	"useEffect log": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
		"prefix": "uselog",
		"body": [
      "useEffect(() => {",
			"  console.log($1);",
			"}, [$1]);"
		],
		"description": "consolelog by useEffect"
	},
  "useState snippet": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "uses",
    "body": [
      "const [$1, set${1/(.*)/${1:/capitalize}/}] = useState<$2>($3);",
    ],
    "description": "generate useState"
  },
  "useEffect snippet": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "usee",
    "body": [
      "useEffect(() => {",
      "",
      "}, []);"
    ],
    "description": "generate useEffect"
  },
  "export default snippet": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "edd",
    "body": [
      "export default $TM_FILENAME_BASE;",
    ],
    "description": "generate useState"
  },
  "reactNativeFunctionalExportComponentWrapper": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "rnfw",
    "body": [
      "import { View } from 'react-native'",
      "import React, { PropsWithChildren } from 'react'",
      "",
      "interface ${TM_FILENAME_BASE}Props {",
      "",
      "}",
      "",
      "const ${TM_FILENAME_BASE}: React.FC<PropsWithChildren<${TM_FILENAME_BASE}Props>> = (props) => {",
      "  const { children } = props;",
      "$1",
      "  return (",
      "    <View>",
      "      {children}",
      "    </View>",
      "  )",
      "}",
      "",
      "export default ${TM_FILENAME_BASE};",
    ],
  },
  "reactNativeFunctionalExport": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "rnfe",
    "body": [
      "import { View } from 'react-native'",
      "import React, { PropsWithChildren } from 'react'",
      "",
      "interface ${TM_FILENAME_BASE}Props {",
      "",
      "}",
      "",
      "const ${TM_FILENAME_BASE}: React.FC<${TM_FILENAME_BASE}Props> = (props) => {",
      "  const {  } = props;",
      "$1",
      "  return (",
      "    <View>",
      "      <Text>${TM_FILENAME_BASE}</Text>",
      "    </View>",
      "  )",
      "}",
      "",
      "export default ${TM_FILENAME_BASE};",
    ],
  },
}
